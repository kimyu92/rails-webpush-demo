<div class="container-fluid">
	<nav class="navbar navbar-light bg-light">
	  <a class="navbar-brand" href="#">
	    <img src="https://i.imgur.com/h2VQMXM.png" width="30" height="30" class="d-inline-block align-top" alt="">
	    Web Push - Browser Off-site Notification
	  </a>
	</nav>

	<br>

	<div class="row">
		<div class="col-md-12">
			<% @users.each do |user| %>
				<div class="form-check">
				  <input class="form-check-input" type="radio" name="input-radio-user-email" id="input-radio-user-email-<%= user.id %>" value="<%= user.email %>">
				  <label class="form-check-label" for="input-radio-user-email-<%= user.id %>">
				    <%= user.name %> - <%= user.email %>
				  </label>
				</div>
			<% end %>
		</div>
	</div>

	<br>

	<div class="row">
		<div class="col-md-12">
			<div class="input-group flex-nowrap">
			  <div class="input-group-prepend">
			    <span class="input-group-text" id="addon-wrapping">Message</span>
			  </div>
			  <input id="input-message" type="text" class="form-control" placeholder="message" aria-label="message" aria-describedby="addon-wrapping">
			</div>

			<br>
			<button type="button" class="btn btn-primary" onclick="getKeys()">
				Send WebPush
			</button>
		</div>
	</div>
</div>

<script>
	function sendPush(subscription) {
		var userEmail = $('input[name="input-radio-user-email"]:checked').val();
		console.log(userEmail);
		if (!userEmail) {
			return;
		}

		$.post('/send_push', {
			subscription: subscription,
			message: $('#input-message').val().trim(),
			user_email: userEmail,
		});
	}

	function getKeys() {
		navigator.serviceWorker.register('/serviceworker.js', {scope: './'}) // 5
      .then(function(registration) {
        return registration.pushManager.getSubscription()
          .then(function(subscription) {
            if (subscription) {
              return subscription;
            }
            return registration.pushManager.subscribe({ // 6
              userVisibleOnly: true,
              applicationServerKey: vapidPublicKey
            });
          });
      })
			.then(function(subscription) {
				sendPush(subscription.toJSON()); // 7
      });
  }

	// function clickToSendPush() {
	// 	getKeys(false)
	// }

	var vapidPublicKey = new Uint8Array(<%=Base64.urlsafe_decode64(ENV['VAPID_PUBLIC']).bytes%>);

	function checkNotifs(obj){
		if (!("Notification" in window)) { // 1
			console.error("This browser does not support desktop notification");
		} else if (Notification.permission === "granted") { // 2
			// Let's check whether notification permissions have already been granted
			console.log("Permission to receive notifications has been granted");
			getKeys();
		} else if (Notification.permission !== 'denied') { // 3
			// Otherwise, we need to ask the user for permission
			Notification.requestPermission(function (permission) {
				// If the user accepts, let's create a notification
				if (permission === "granted") { // 4
					console.log("Permission to receive notifications has been granted");
					getKeys();
				}
			});
		}
	}
</script>
